#!/bin/bash

# ANSI color codes for styling
COLOR_GREEN='\033[0;32m'
COLOR_CYAN='\033[0;36m'
COLOR_INDIGO='\033[0;34m'
COLOR_PURPLE='\033[0;35m'
COLOR_RESET='\033[0m'

# Function to run the nmap scan
run_nmap_scan() {
    local command="$1"

    # Display a loading prompt with dots
    echo -ne "${COLOR_INDIGO}Scanning enemy${COLOR_CYAN}"

    # Append dots continuously while nmap is running
    while sleep 5; do
    echo -n " ."
	if ! ps aux | grep -v grep | grep nmap > /dev/null; then
           # nmap is not running
    	   break
	fi
    done

    echo -e "${COLOR_RESET}"  # Reset the color and move to the next line

    # Execute the nmap command and capture the output
    nmap_output=$(${command} 2>&1)

    # Print the scan result header
    echo -e "\n${COLOR_INDIGO}┌────────────────────────────────────────────────────────────────┐"
    echo -e "│           ${COLOR_CYAN}Nmap Scan Results │ ${command}${COLOR_INDIGO}          │"
    echo -e "└────────────────────────────────────────────────────────────────┘${COLOR_RESET}"

    # Print and highlight "open" ports in green
    while IFS= read -r line; do
        if [[ "$line" == *"open"* ]]; then
            echo -e "${COLOR_GREEN}${line}${COLOR_RESET}"
        else
            echo "$line"
        fi
    done <<< "$nmap_output"
}

# Main function
main() {
    # Prompt the user for the IP address
    echo -ne "${COLOR_PURPLE}Please enter the IP address to scan: ${COLOR_RESET}"
    read ip_address

    # Validate IP address (basic validation)
    if [[ -z "$ip_address" ]]; then
        echo "IP address cannot be empty."
        exit 1
    fi

    # Prompt the user to select a scan type
    echo -e "${COLOR_CYAN}Please select a scan type:${COLOR_RESET}"
    echo "1) nmap -sC -sV -T4 $ip_address"
    echo "2) nmap -sC -sV -T4 -p- --open $ip_address"
    echo "3) Choice 2 + -Pn"
    echo "4) nmap -sC -sV -T4 -O -p- --script=vuln --open $ip_address"
    
    echo -ne "${COLOR_PURPLE}Enter your choice (1, 2, 3, or 4): ${COLOR_RESET}"
    read choice

    # Validate the user's choice and run the corresponding command
    case $choice in
        1)
            command="nmap -sC -sV -T4 $ip_address"
            ;;
        2)
            command="nmap -sC -sV -T4 -p- --open $ip_address"
            ;;
	3)
	    command="nmap -sC -sV -T4 -p- --open -Pn $ip_address"
	    ;;
        4)
            command="nmap -sC -sV -T4 -O -p- --script=vuln --open $ip_address"
            ;;
        *)
            echo "Invalid choice. Exiting."
            exit 1
            ;;
    esac

    # Run the selected nmap scan
    run_nmap_scan "$command"
}

# Run the main function
main
